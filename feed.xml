<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://0.0.0.0:3000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:3000/blog/" rel="alternate" type="text/html" /><updated>2018-02-27T07:34:42+00:00</updated><id>http://0.0.0.0:3000/blog/</id><title type="html">Valehelle</title><subtitle>This blog is a way for me to share my experience in programming. My project involve Android, React Native and Rails.</subtitle><entry><title type="html">3 mistakes I made when learning React Native</title><link href="http://0.0.0.0:3000/blog/react-native/2018/02/26/3-mistake-I-made-when-learning-react-native.html" rel="alternate" type="text/html" title="3 mistakes I made when learning React Native" /><published>2018-02-26T06:35:45+00:00</published><updated>2018-02-26T06:35:45+00:00</updated><id>http://0.0.0.0:3000/blog/react-native/2018/02/26/3-mistake-I-made-when-learning-react-native</id><content type="html" xml:base="http://0.0.0.0:3000/blog/react-native/2018/02/26/3-mistake-I-made-when-learning-react-native.html">&lt;h5 id=&quot;react-native-is-a-great-platform-for-you-to-target-both-ios-and-android-simultaneously-without-sacrificing-your-app-performance-however-not-all-things-are-perfect-here-are-some-things-that-i-learn-while-working-on-a-react-native-project&quot;&gt;React Native is a great platform for you to target both IOS and Android simultaneously without sacrificing your app performance. However, not all things are perfect. Here are some things that I learn while working on a React Native project.&lt;/h5&gt;

&lt;h2 id=&quot;1-trying-to-learn-react-native-and-redux-at-the-same-time&quot;&gt;1. Trying to learn React Native and Redux at the same time.&lt;/h2&gt;
&lt;p&gt;When I first started learning React Native, I made a mistake of learning Redux at the same time. I thought that you cannot do one without the other. This make learning simple things alot more complex than it should. You should start with the basic. Create a project using only React Native. When you are comfortable with it, then you can move to learning Redux.&lt;/p&gt;

&lt;h2 id=&quot;2-never-state-the-version-number&quot;&gt;2. Never state the version number.&lt;/h2&gt;
&lt;p&gt;When importing any library, always include the &lt;strong&gt;version number only&lt;/strong&gt;. Never leave it blank or “^” .&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javscript&quot;&gt;//This is bad
&quot;redux&quot;: &quot;3.6.0&quot;,
&quot;redux-logger&quot;: &quot;^3.0.1&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-javscript&quot;&gt;//This is good
&quot;redux&quot;: &quot;3.6.0&quot;,
&quot;redux-logger&quot;: &quot;3.0.1&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The reason for this is simple. If you did not put a version number, bundler will always install the latest version. Lets say your original project uses redux version  3.5.0.When you clone from a repository like github, because you did not specify your redux version, bundler will install the latest version. This will make your clone project out of sync with your original one and this can cause issue with some 3rd party library.&lt;/p&gt;

&lt;h2 id=&quot;3-using-redux-for-everything&quot;&gt;3. Using Redux for everything.&lt;/h2&gt;
&lt;p&gt;Redux is a powerful tool. But you should not used it for everything. In my early days of using React Native I store everything in Redux. Including a simple input text field. Not only that this add to the length of code,but it also complex things that was simple. Use Redux only when it makes sense, where that data is needed globally. Otherwise, local variable is just fine.&lt;/p&gt;</content><author><name></name></author><summary type="html">React Native is a great platform for you to target both IOS and Android simultaneously without sacrificing your app performance. However, not all things are perfect. Here are some things that I learn while working on a React Native project.</summary></entry><entry><title type="html">5 Things you should now before learning React Native</title><link href="http://0.0.0.0:3000/blog/react-native/2018/02/25/5-things-you-should-know-before-learning-react-native.html" rel="alternate" type="text/html" title="5 Things you should now before learning React Native" /><published>2018-02-25T06:35:45+00:00</published><updated>2018-02-25T06:35:45+00:00</updated><id>http://0.0.0.0:3000/blog/react-native/2018/02/25/5-things-you-should-know-before-learning-react-native</id><content type="html" xml:base="http://0.0.0.0:3000/blog/react-native/2018/02/25/5-things-you-should-know-before-learning-react-native.html">&lt;h4 id=&quot;react-native-is-a-great-platform-for-you-to-target-both-ios-and-android-simultaneously-without-sacrificing-your-app-performance-however-not-all-things-are-perfect-here-are-some-things-that-you-should-know-before-learning-react-native&quot;&gt;React Native is a great platform for you to target both IOS and Android simultaneously without sacrificing your app performance. However, not all things are perfect. Here are some things that you should know before learning React Native.&lt;/h4&gt;

&lt;h2 id=&quot;1-no-folder-structure&quot;&gt;1. No folder structure&lt;/h2&gt;
&lt;p&gt;There is no folder structure in React Native. On android when you create a project,there is at least a basic folder structure for you to start with. This might be okay for veteran programmer as they already have their own folder structure that they like but can be difficult for newcomers.&lt;/p&gt;

&lt;h2 id=&quot;2-no-navigation&quot;&gt;2. No navigation&lt;/h2&gt;
&lt;p&gt;On android navigation is automatically handled. If I want to move to a new screen, I just start the Intent.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoginActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However in React Native, you need to import your own 3rd party navigation library and also learn how to use them correctly.&lt;/p&gt;

&lt;h2 id=&quot;3-javascript&quot;&gt;3. Javascript&lt;/h2&gt;
&lt;p&gt;React Native is coded in javascript. For a web developer this might be a positive but for Android developer this may take some time to get used to.&lt;/p&gt;

&lt;h2 id=&quot;4-3rd-party-library&quot;&gt;4. 3rd party library&lt;/h2&gt;
&lt;p&gt;You need to import many 3rd party library before your app is actually usable. If there is a new version of React Native but not supported in one of your library, then you are stuck on using the old version of React Native.&lt;/p&gt;

&lt;h2 id=&quot;5-error-message-is-not-obvious&quot;&gt;5. Error message is not obvious.&lt;/h2&gt;
&lt;p&gt;React Native although error loudly, is sometime not clear with its error message. This can frustrate newcomers.&lt;/p&gt;</content><author><name></name></author><summary type="html">React Native is a great platform for you to target both IOS and Android simultaneously without sacrificing your app performance. However, not all things are perfect. Here are some things that you should know before learning React Native.</summary></entry></feed>